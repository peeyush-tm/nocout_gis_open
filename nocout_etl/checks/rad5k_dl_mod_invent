#!/usr/bin/python

# ######################################################################
# Function: check_rad5k_dl_mod_invent
#
# Parameters: info (SNMP Ouput) _no_params (No Parameters)
#
# Output: service state ,plugin output
# ######################################################################

def check_rad5k_dl_mod_invent(item, _no_params, info):
    """
            check_rad5k_dl_mod_invent function calculates the uplink utilization

            Args:
                    item (str) Specific item on SNMP output on which we want to filter results

            Kwargs:
                    params (tuple) Check parameters for critical and warning state of service

            Returns:
                    state (int) :
                                    0 : OK
                                    1 : Warning
                                    2: Critical
                                    3: unknown
                    infotext(string):
                                    plugin output
                                    Example :  OK - dl modulatino change: 107 

                    Raises:
                            ValueError ,Exception

    """ 
    rad5k_dl_mod_invent_convert_dict = {007:'64QAM-FEC-5/6', 107:'64QAM-FEC-5/6', 207:'64QAM-FEC-5/6', 006: '64QAM-FEC-3/4', 106: '64QAM-FEC-3/4', 206: '64QAM-FEC-3/4', 005: '64QAM-FEC-2/3', 105:'64QAM-FEC-2/3', 205:'64QAM-FEC-2/3', 004:'16QAM-FEC-3/4', 104: '16QAM-FEC-3/4', 204: '16QAM-FEC-3/4', 003:'16QAM-FEC-1/2', 103:'16QAM-FEC-1/2', 203:'16QAM-FEC-1/2',002:'QPSK-FEC-3/4', 102:'QPSK-FEC-3/4', 202:'QPSK-FEC-3/4', 001:'QPSK-FEC-1/2', 101:'QPSK-FEC-1/2', 201:'QPSK-FEC-1/2', 000:'BPSK-FEC-1/2', 100:'BPSK-FEC-1/2', 200:'BPSK-FEC-1/2' }

    state = 3
    infotext = "unknown_value"
    dl_mod = ""
        
    try:
        if info:
            if info[0][0]:
		dl_mod = int(info[0][0])
		dl_mod = rad5k_dl_mod_invent_convert_dict.get(dl_mod,'')
                state = 0
                infotext = "dl modulatino change: %s" % dl_mod                                
    except ValueError :
	infotext = "type_mismatch_value"
    except:
	infotext = "unknown_value"
		
    return (state,infotext,[("dl_modulation_change",dl_mod)])
                
check_info["rad5k_dl_mod_invent"] = {
    'check_function' :  check_rad5k_dl_mod_invent,
    'service_description' : "rad5k_dl_mod_invent",
    'has_perfdata': True
}
#########################################################################
#       SNMP OID for the downlink modulation
#########################################################################
snmp_info['rad5k_dl_mod_invent'] = (".1.3.6.1.4.1.4458.1000.1.5.9",["5.0"])

