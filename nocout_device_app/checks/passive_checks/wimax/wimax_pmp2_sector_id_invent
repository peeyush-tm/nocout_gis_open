#!/usr/bin/python
import binascii
"""
service on SS,which calculates the bs mac.

This is part of device application. 
Poller script determines the bs mac. 
poller script takes the snmp value of OID .1.3.6.1.2.1.2.2.1.6.1 from snmp agent of device at specific interval.
BS mac information is sent to device application 

"""
# ######################################################################
# Function : check_wimax_pmp2_sector_id_invent
#
# Parameters: info (SNMP Output) _no_params(No Parameters)
#
# Output: service state and plugin output
# #####################################################################

def check_wimax_pmp2_sector_id_invent(item, _no_params, info):
    """
                check_wimax_pmp2_sector_id_invent function calculates the mac of bs

                Args:
                        item (str) Specific item on SNMP output on which we want to filter results
                
                Kwargs:
                        params (tuple) Check parameters for critical and warning state of service

                Returns:
                        state (int) :
                                        0 : OK
                                        1 : Warning
                                        2: Critical
                    3: unknown
                        infotext(string):
                                        plugin output
                                        Example : OK - BB1202020

                        Raises:
                               Exception
    """
    state = 3
    infotext = "unknown_value"
    try:
        if info:
            if info[0][0]:
		bs_mac = info[0][0]
		bs_mac = binascii.b2a_hex(bs_mac)
		n = 2
		new_bs_mac=(':').join([bs_mac[i:i+2] for i in range(0, len(bs_mac), n)])
		new_bs_mac = new_bs_mac.lower()
		state = 0
		infotext = "%s" % new_bs_mac
		key = g_hostname + "_pmp2_sec"
                try:
                        if memc:
                                memc.set(key,new_bs_mac)
                except:
                        pass
    except:
        infotext = "unknown_value"
    return (state, infotext)


check_info["wimax_pmp2_sector_id_invent"] = {
    'check_function': check_wimax_pmp2_sector_id_invent,
    'service_description': 'wimax_pmp2_sector_id_invent',
}

#################################################################
#SNMP OID value for poller script
################################################################

snmp_info["wimax_pmp2_sector_id_invent"] = ( ".1.3.6.1.4.1.5812.2000.11.2.1", ["4.200"] )
