#!/usr/bin/python

import sys
from telnetlib import Telnet
import socket
import json
import os

import mysql.connector
"""
operating Frequency of ss device  Poller script.

This is part of device application. 
Poller script determines the operating ptx of device. 
poller script takes the snmp value of OID .1.3.6.1.4.1.161.19.3.1.1.2.0 from snmp agent of device at specific interval.
Device on which Frequency operating is sent to device application 

"""
# ######################################################################
# Function: check_wimax_ss_link_status
#
# Parameters: info (SNMP Ouput) _no_params (No Parameters)
#
# Output: service state ,plugin output
# ######################################################################

def live_query_ss_link(host_name):
        """
        Connects to a socket, checks for the WELCOME-MSG and closes the
        connection.
        Returns nothing.

        """
        exit_value = 3
        ss_link = None
        try:
                query_string = "GET services\nColumns: plugin_output\nFilter: " + \
                                "service_description = %s\nFilter: host_name = %s\nOutputFormat: python\n" % ("wimax_ss_port_params",host_name)

                query_output = eval(get_from_socket(None,None,query_string,nagios_user,None).strip())
                if query_output[0][0]:
                        plugin_output = str(query_output[0][0].split('OK -')[1])
                        plugin_output = [entry for entry in plugin_output.split(',')]
                        ss_link = plugin_output[5].split('=')[1]

        except:
                ss_link = None
        return ss_link



def check_wimax_ss_link_status(item, _no_params, info):
    """
            check_wimax_ss_link_status function calcdlates the operating ptx

            Args:
                    item (str) Specific item on SNMP output on which we want to filter resdlts

            Kwargs:
                    params (tuple) Check parameters for critical and warning state of service

            Returns:
                    state (int) :
                                    0 : OK
                                    1 : Warning
                                    2: Critical
                3: unknown
                    infotext(string):
                                    plugin output
                                    Example : OK - 5835

                    Raises:
                            ValueError ,Exception
    """
    state = 3
    infotext = "unknown_value"
    ss_link= None
    try:
	ss_link =live_query_ss_link(g_hostname)
	if ss_link:
		ss_link = ss_link.strip('\r')
		infotext = "SS ethernet link is %s" % ss_link	
		state = 0
    except ValueError:
        infotext = "type_mismatch_value"
    except:
        infotext = "unknown_value"

    return (state, infotext,[("link_state", ss_link)])


check_info["wimax_ss_link_status"] = {
    'check_function': check_wimax_ss_link_status,
    'service_description': 'wimax_ss_link_status',
    'has_perfdata' : True,
}

#########################################################################
#	SNMP OID for the operating ptx
#########################################################################
snmp_info["wimax_ss_link_status"] = ( ".1.3.6.1.2.1.10.184.1.3.1.1.1", ["17.1"] )
