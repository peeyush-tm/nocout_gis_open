#!/usr/bin/python
# ######################################################################
# Function: check_rad5k_ul_ses_invent
#
# Parameters: info (SNMP Ouput) _no_params (No Parameters)
#
# Output: service state ,plugin output
# ######################################################################
def live_query_for_rad5k_ss_ul_ses(serial_number):
        """
               live_query_for_rad5k_ss_ul_ses function calculates the SS Uplink SES by extracting data
                from memory using SS Serial number as key from memcache; if data is not present in memcache
                it retrieves the data from Livestatus by making a socket connection and reading plugin output
                of 'rad5k_topology_discover' through the details of its corresponded Base Station whose
                details are fetched from memcache or MySQL DB(if not present in memcache)

                Args:
                        serial_number(str) Sub Station Serial Number

                Returns:
                        ul_ses(string): SS Uplink SES

                Raises:
                        Exception

        """
        exit_value = 3
        ul_ses = None
        bs_params = None
        if memc:
                key = serial_number + "_param"
                value_list = memc.get(key)
                if value_list:
                        try:
                                ul_ses = value_list[10]
                        except:
                                ul_ses = None
        return ul_ses

def check_rad5k_ul_ses_invent(item, params, info):
	"""
            check_rad5k_ul_ses_invent function calculates the Uplink ES

            Args:
                    item (str) Specific item on SNMP output on which we want to filter results

            Kwargs:
                    params (tuple) Check parameters for critical and warning state of service

            Returns:
                    state (int) :
                                    0 : OK
                                    1 : Warning
                                    2: Critical
                                    3: unknown
                    infotext(string):
                                    plugin output
                                    Example : OK - ul_ses=1

                    Raises:
                            ValueError ,Exception

	"""
        try:
                warn , crit = params
        except ValueError :
                war = 1
                crit = 5

	state = 3
	infotext = "unknown_value"
	ul_ses= None
	try:
		if info :
	        	ss_serial_number = info[0][0]
        		if ss_serial_number:
                		ul_ses =int(live_query_for_rad5k_ss_ul_ses(ss_serial_number))
		                if ul_ses is not None:
        		                if  ul_ses >= warn and  ul_ses < crit:
                		                state = 1
                        		elif  ul_ses >= crit:
                                		state = 2
	                        	elif  ul_ses == 0:
        	                        	state = 0

					infotext = "ul_ses=%s" % ul_ses
	except ValueError:
        	infotext = "type_mismatch_value"
	except:
        	infotext = "unknown_value"

	return (state, infotext,[("ul_ses",ul_ses,warn,crit)])

check_info["rad5k_ul_ses_invent"] = {
    'check_function': check_rad5k_ul_ses_invent,
    'service_description': 'rad5k_ul_ses_invent',
    'has_perfdata': True,
}

#########################################################################
#       SNMP OID for the Uplink ES
#########################################################################
snmp_info["rad5k_ul_ses_invent"] = (  ".1.3.6.1.4.1.4458.1000.1.1", ["29.0"] )
