#!/usr/bin/python
from datetime import datetime,timedelta
import time
try:
    from mysql_connection import memc
except Exception,e:
    print e
    pass
"""
Poller script for jitter value in downlink for SS type cambium devices.

Poller script determines the jitter value.
poller script takes the snmp value of OID 1.3.6.1.4.1.161.19.3.2.2.3.0 from snmp agent of device at specific interval.
Information of ss type cambium device is sent to device application 

"""
# #############################################################
# Function :  check_cambium_dl_jitter
#
# Parameters : info(SNMP output of OID ) _no_params (Currently no params supported )
#
# Output  :  service state , Plugin output and performace data
#############################################################

params = (6, 10)

def check_cambium_dl_jitter(item, params, info):
    """
                check_cambium_dl_jitter function calculates the downlink jitter

                Args:
                        item (str) Specific item on SNMP output on which we want to filter results
                
                Kwargs:
                        params (tuple) Check parameters for critical and warning state of service

                Returns:
                        state (int) :
                                        0 : OK
                                        1 : Warning
                                        2: Critical
                    3: unknown
                        infotext(string):
                                        plugin output
                                        Example : jitter_dl is 0

                        performance_data  (list):
                                        performance data
                                        Example: jitter_dl=0;;;;
                        Raises:
                                ValueError ,Exception
    """
    warn, crit = params
    state = 3
    jitter_dl = None
    infotext = "unknown output"
    this_time = datetime.now()
    t_stmp = this_time + timedelta(minutes=-(this_time.minute % 5))
    t_stmp = t_stmp.replace(second=0,microsecond=0)
    current_time =int(time.mktime(t_stmp.timetuple()))
    try:
        if info:
            if info[0][0]:
                jitter_dl = int(info[0][0])
		if jitter_dl > crit:
			state = 2
		elif jitter_dl <= crit and jitter_dl >= warn:
			state = 1
		else:
                	state = 0
		if memc:
			key1 = str(g_hostname) + "_dl_jitter" + "_" + str(current_time)
			memc.set(key1,jitter_dl,600)
                infotext = "Jitter DL is %d " % jitter_dl
    except ValueError:
        infotext = "type mismatch on value"
    except:
        infotext = "unknown value"
    return (state, infotext, [("dl_jitter", saveint(jitter_dl),warn,crit)])


check_info["cambium_dl_jitter"] = {
'check_function': check_cambium_dl_jitter,
'service_description': 'cambium_dl_jitter',
'has_perfdata': True,
}

##############################################################
# SNMP OID
#############################################################
snmp_info["cambium_dl_jitter"] = ( ".1.3.6.1.4.1.161.19.3.2.2", ["3.0"] )

