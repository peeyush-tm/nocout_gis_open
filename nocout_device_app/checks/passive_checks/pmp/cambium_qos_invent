#!/usr/bin/python
"""
Qos parameters Poller script.

This is part of device application. 
Poller script determines the qos parameters of the devices. 
poller script takes the snmp value of OID .1.3.6.1.4.1.161.19.3.2.1 from snmp agent of device at specific interval.
Qos parameters information is sent to device application 

"""

# ####################################################################################
# Function : check_cambium_qos_invent
#
#Parameters: info (SNMP output ) _no_params ( No Parameters)
#
#Output: plugin output ,service state,performance data
#####################################################################################

def qos_string(st):
    names = {'1': 'low_pri_ul_cir', '2': 'low_pri_dl_cir',
             '3': 'high_pri_ul_cir', '4': 'high_pri_dl_cir',
             '5': 'bw_ul_sus_rate', '6': 'bw_dl_sus_rate','7':'ul_burst_allocation','8':'dl_burst_allocation'}
    return names.get(st)


def check_cambium_qos_invent(item, _no_params, info):
    """
                check_cambium_qos_invent function calculates the link ethernet status of the port 

                Args:
                        item (str) Specific item on SNMP output on which we want to filter results
                
                Kwargs:
                        params (tuple) Check parameters for critical and warning state of service

                Returns:
                        state (int) :
                                        0 : OK
                                        1 : Warning
                                        2: Critical
                    3: unknown
                        infotext(string):
                                        plugin output
                                        Example : [Management_Port_on_Odu]up [Radio_Interface]up

                        performance_data  (list):
                                        performance data
                                        Example: Management_Port_on_Odu=up;;;; Radio_Interface=up;;;;
                        Raises:
                                ValueError ,Exception
    """
    state = 3
    port_stats = None
    infotext = "unknown_value"
    qos_list = []
    try:
        if info:
		infotext = ""
		for index in range(len(info[0])):
			if info[0][index]:
				value1 = float(info[0][index])/1024.0
			else:
				value1 =info[0][index]
			qos_list.append((qos_string(str(index+1)),value1))
            	state = 0
		for ds,value in qos_list:
            		infotext += "%s=%s " % (ds,value)

    except ValueError:
        infotext = "type_mismatch_value"
    except:
        infotext = "unknown_value"

    return (state, infotext)


check_info["cambium_qos_invent"] = {
    'check_function': check_cambium_qos_invent,
    'service_description': 'cambium_qos_invent',
}

#####################################################################
#snmp OID corrosponding to qos parameters.
######################################################################

snmp_info["cambium_qos_invent"] = ( ".1.3.6.1.4.1.161.19.3.2.1", ["56","57","59","60","62","64","63","65"] )
