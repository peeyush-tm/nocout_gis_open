#!/usr/bin/python

"""
operating Frequency of SS device  Poller script.

This is part of device application. 
Poller script determines the operating frequency of device. 
poller script takes the snmp value of OID 1.3.6.1.4.1.161.19.3.2.2.67.0 from snmp agent of device at specific interval.
Device on which Frequency operating is sent to device application 

"""
# ######################################################################
# Function: check_cambium_ss_frequency_invent
#
# Parameters: info (SNMP Ouput) _no_params (No Parameters)
#
# Output: service state ,plugin output
# ######################################################################


def check_cambium_ss_frequency_invent(item, _no_params, info):
    """
            check_cambium_ss_frequency_invent function calculates the operating frequency

            Args:
                    item (str) Specific item on SNMP output on which we want to filter results

            Kwargs:
                    params (tuple) Check parameters for critical and warning state of service

            Returns:
                    state (int) :
                                    0 : OK
                                    1 : Warning
                                    2: Critical
                3: unknown
                    infotext(string):
                                    plugin output
                                    Example : OK - 5835

                    Raises:
                            ValueError ,Exception
"""
    state = 3
    infotext = "unknown_value"
    ss_frequency = ''
    try:
        if info:
            if info[0][0]:
                frequency = int(info[0][0])
                if frequency < 0:
                    state = 0
                    infotext = "invalid_value_%d" % frequency
		    ss_frequency = infotext
                else:
                    state = 0
                    infotext = "%.3f" % frequency
		    ss_frequency = infotext
    except ValueError:
        infotext = "type_mismatch_value"
    except:
        infotext = "unknown_value"
    return (state, infotext,[("frequency",ss_frequency)])


check_info["cambium_ss_frequency_invent"] = {
    'check_function': check_cambium_ss_frequency_invent,
    'service_description': 'cambium_ss_frequency_invent',
    'has_perfdata' : True
}

#########################################################################
#	SNMP OID for the operating frequency
#########################################################################
snmp_info["cambium_ss_frequency_invent"] = ( ".1.3.6.1.4.1.161.19.3.2.2", ["67.0"] )
