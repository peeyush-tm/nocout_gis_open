#!/usr/bin/python
import time
import binascii
"""
Poller script which runs on ss and calculates the ul utilization of the ss connected from BS.

Poller script determines the uplink utilization of the ss.
poller script takes the snmp value of OID .1.3.6.1.4.1.161.19.3.1.4.1.21 from snmp agent of device at specific interval.
uplink utilization information is sent to device application 

"""
# ##################################################################
# Function : check_cambium_ul_utilization
#
#  Parameters: info(SNMP output) ,params(parameters to check the service state) 
#
#  Output: service state,plugin output ,performance data
##################################################################


def check_cambium_ul_utilization(item, _no_params, info):
    """
        Check_cambium_ul_utilization function calcaulates the upliknk utilization

        Args:
            item (str) Specific item on SNMP output on which we want to filter results

        Kwargs:
            params (tuple) Check parameters for critical and warning state of service

        Returns:
            state (int) :
                    0: OK
                    1: Warning
                    2: Critical
                    3: unknown
            infotext(string):
                    plugin output
                    Example : Device received signal strength indication is -76

            performance_data  (list):
                    performance data
                    Example: cambium_ul_utilization=-76;-50;-80;;;
            Raises:
                ValueError ,Exception
    """
    state = 3
    infotext = "unknown_value"
    status_list = [] 
    rate = None
    wrapped =False
    try:
        if info:
		status_list = []
		if info[0][0]:
			ul_utilization = info[0][0]
			this_time = int(time.time())
			try:
                        	timedif, rate = get_counter("cambium_ul_utilization", this_time, saveint(ul_utilization))
				rate = (rate*8)/(1024*1024)
                	except MKCounterWrapped:
                        	wrapped=True
                	status_list.append(("ul_utilization", "%.2f" % (rate)))
			infotext = "Uplink utilization %s " % (rate)
			state= 0
			key = g_hostname + "_ul"
			try:
				if memc:
					memc.set(key,"%.2f" % rate)
			except: 
				pass
	else:
	    infotext = "No interface present"
	    
    except ValueError:
        infotext = "type_mismatch_value"
    except:
        infotext = "unknown_value"
    if wrapped:
        infotext = "Counter wrapped"
    
    return (state, infotext, status_list)


check_info["cambium_ul_utilization"] = {
    'check_function': check_cambium_ul_utilization,
    'service_description': 'cambium_ul_utilization',
    'has_perfdata': True,
}

#######################################################################
#	SNMP OID
#######################################################################
snmp_info["cambium_ul_utilization"] = ( ".1.3.6.1.2.1.2.2.1", ["16.1"] )
