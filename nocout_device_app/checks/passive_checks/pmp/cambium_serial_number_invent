#!/usr/bin/python
import binascii
"""
service on SS,which calculates the ss ip.

This is part of device application. 
Poller script determines the bs ip. 
poller script takes the snmp value of OID  1.3.6.1.4.1.161.19.3.3.1.13.0 from snmp agent of device at specific interval.
SS ip information is sent to device application 

"""
# ######################################################################
# Function : check_cambium_serial_number_invent
#
# Parameters: info (SNMP Output) _no_params(No Parameters)
#
# Output: service state and plugin output
# #####################################################################

def check_cambium_serial_number_invent(item, _no_params, info):
    """
                check_cambium_serial_number_invent function calculates the idu serial number

                Args:
                        item (str) Specific item on SNMP output on which we want to filter results
                
                Kwargs:
                        params (tuple) Check parameters for critical and warning state of service

                Returns:
                        state (int) :
                                        0 : OK
                                        1 : Warning
                                        2: Critical
                    3: unknown
                        infotext(string):
                                        plugin output
                                        Example : OK - BB1202020

                        Raises:
                               Exception
    """
    state = 3
    infotext = "unknown_value"
    serial_number_list = []
    new_serial_number = ''
    try:
        if info:
            if info[0][0]:
		infotext = ""
		# Check_mk gives the HEX-STRING value in binary format.Required conversion to convert in to string
		serial_number = binascii.b2a_hex(info[0][0])
                n = 2
                new_serial_number = (':').join([serial_number[i:i+2] for i in range(0, len(serial_number), n)])
                state = 0
                infotext += "%s" % (new_serial_number)
    except:
        infotext = "unknown_value"
    return (state, infotext,[("serial_number",new_serial_number)])


check_info["cambium_serial_number_invent"] = {
    'check_function': check_cambium_serial_number_invent,
    'service_description': 'cambium_serial_number_invent',
    'has_perfdata': True
}

#################################################################
#SNMP OID value for poller script
################################################################

snmp_info["cambium_serial_number_invent"] = ( ".1.3.6.1.2.1.2.2.1", ["6.1"] )
